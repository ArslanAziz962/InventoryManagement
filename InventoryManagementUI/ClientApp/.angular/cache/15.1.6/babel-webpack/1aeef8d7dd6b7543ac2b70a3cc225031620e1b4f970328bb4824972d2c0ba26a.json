{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/purchase/purchase.service\";\nimport * as i2 from \"@angular/common\";\nfunction PurchaseListComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PurchaseListComponent_h3_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 4);\n    i0.ɵɵtext(1, \"Error to fetch Data\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PurchaseListComponent {\n  constructor(purchaseSerivce) {\n    this.purchaseSerivce = purchaseSerivce;\n    this.isLoading = true;\n    this.purchases = [];\n    this.isError = false;\n    this.getAllPurchases();\n  }\n  getAllPurchases() {\n    this.subscription = this.purchaseSerivce.getAllPurchases().subscribe({\n      next: response => {\n        console.log('purchases:', response);\n        this.purchases = response;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.isError = true;\n        this.isLoading = false;\n        console.error('error when getting products:', error);\n      }\n    });\n  }\n}\nPurchaseListComponent.ɵfac = function PurchaseListComponent_Factory(t) {\n  return new (t || PurchaseListComponent)(i0.ɵɵdirectiveInject(i1.PurchaseService));\n};\nPurchaseListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PurchaseListComponent,\n  selectors: [[\"app-purchase-list\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"mt-3\"], [4, \"ngIf\"], [\"class\", \"text-center text-danger\", 4, \"ngIf\"], [1, \"text-center\", \"text-danger\"]],\n  template: function PurchaseListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Purchases List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, PurchaseListComponent_p_3_Template, 3, 0, \"p\", 2);\n      i0.ɵɵtemplate(4, PurchaseListComponent_h3_4_Template, 2, 0, \"h3\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading && !ctx.isError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isError);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAMEA,yBAAiC;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAEpDA,6BAAoD;IAAAA,mCAAmB;IAAAA,iBAAK;;;ACE9E,OAAM,MAAOC,qBAAqB;EAQhCC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAY,IAAI;IAGvB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAe;IAEb,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,eAAe,CAACG,eAAe,EAAE,CAACE,SAAS,CAAC;MACnEC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;QACnC,IAAI,CAACN,SAAS,GAAGM,QAAQ;QACzB,IAAI,CAACG,SAAS,GAAG,KAAK;MACxB,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACT,OAAO,GAAG,IAAI;QACnB,IAAI,CAACQ,SAAS,GAAG,KAAK;QAEtBF,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;KACD,CAAC;EAGJ;;AA/BWb,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVlCnB,8BAAuB;MACJA,8BAAc;MAAAA,iBAAK;MAKpCA,kEAAwD;MAExDA,oEAA4E;MA6B9EA,iBAAM;;;MA/BAA,eAA2B;MAA3BA,oDAA2B;MAE1BA,eAAa;MAAbA,kCAAa","names":["i0","PurchaseListComponent","constructor","purchaseSerivce","purchases","isError","getAllPurchases","subscription","subscribe","next","response","console","log","isLoading","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\csharp projects\\InventoryManagement\\InventoryManagementUI\\ClientApp\\src\\app\\purchase-list\\purchase-list.component.html","E:\\csharp projects\\InventoryManagement\\InventoryManagementUI\\ClientApp\\src\\app\\purchase-list\\purchase-list.component.ts"],"sourcesContent":["<div class=\"container\">\n  <h1 class=\"mt-3\">Purchases List</h1>\n  <!--<div class=\"d-flex justify-content-end mt-3\">\n    <a [routerLink]=\"['/add-product']\" class=\"btn btn-primary\"> Add Product</a>\n  </div>-->\n\n  <p *ngIf=\"isLoading && !isError\"><em>Loading...</em></p>\n\n  <h3 *ngIf=\"isError\" class=\"text-center text-danger\">Error to fetch Data</h3>\n\n\n  <!--<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"purchases.length && !isError\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Price</th>\n        <th>Quantity</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let p of products\">\n        <td>{{ p.name }}</td>\n        <td>{{ p.description }}</td>\n        <td>{{ p.price }}</td>\n        <td>{{ p.quantity }}</td>\n        <td>\n\n          <button class=\"btn btn-primary\" (click)=\"editProduct(p)\">Edit</button>\n          <button class=\"btn btn-danger mx-3\" (click)=\"deleteProduct(p.productId.toString())\">Delete</button>\n\n        </td>\n      </tr>\n    </tbody>\n  </table>-->\n\n</div>\n","import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\r\nimport { Purchase } from '../../models/Purchase';\r\nimport { PurchaseService } from '../../services/purchase/purchase.service';\r\n\n@Component({\n  selector: 'app-purchase-list',\n  templateUrl: './purchase-list.component.html',\n  styleUrls: ['./purchase-list.component.css']\n})\nexport class PurchaseListComponent {\n\n  purchases: Purchase[];\n  subscription?: Subscription;\n  deleteSubscription?: Subscription;\n  isError: boolean;\n  isLoading: boolean = true;\n\n  constructor(private purchaseSerivce: PurchaseService) {\n    this.purchases = []\r\n    this.isError = false;\r\n    this.getAllPurchases();\r\n  }\n\n  getAllPurchases() {\r\n\r\n    this.subscription = this.purchaseSerivce.getAllPurchases().subscribe({\r\n      next: (response) => {\r\n        console.log('purchases:', response);\r\n        this.purchases = response\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.isError = true;\r\n        this.isLoading = false;\r\n\r\n        console.error('error when getting products:', error)\r\n      }\r\n    })\r\n\r\n\r\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}