{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sale/sale.service\";\nimport * as i2 from \"@angular/common\";\nfunction SaleListComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SaleListComponent_h3_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 4);\n    i0.ɵɵtext(1, \"Error to fetch Data\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SaleListComponent_h3_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 4);\n    i0.ɵɵtext(1, \"No Records found\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class SaleListComponent {\n  constructor(saleSerivce) {\n    this.saleSerivce = saleSerivce;\n    this.isLoading = true;\n    this.sales = [];\n    this.isError = false;\n    this.getAllSales();\n  }\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n  getAllSales() {\n    this.subscription = this.saleSerivce.getAllSales().subscribe({\n      next: response => {\n        console.log('sales:', response);\n        this.sales = response;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.isError = true;\n        this.isLoading = false;\n        console.error('error when getting products:', error);\n      }\n    });\n  }\n}\nSaleListComponent.ɵfac = function SaleListComponent_Factory(t) {\n  return new (t || SaleListComponent)(i0.ɵɵdirectiveInject(i1.SaleService));\n};\nSaleListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SaleListComponent,\n  selectors: [[\"app-sale-list\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"mt-3\"], [4, \"ngIf\"], [\"class\", \"text-center text-danger\", 4, \"ngIf\"], [1, \"text-center\", \"text-danger\"]],\n  template: function SaleListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Sales List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, SaleListComponent_p_3_Template, 3, 0, \"p\", 2);\n      i0.ɵɵtemplate(4, SaleListComponent_h3_4_Template, 2, 0, \"h3\", 3);\n      i0.ɵɵtemplate(5, SaleListComponent_h3_5_Template, 2, 0, \"h3\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading && !ctx.isError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && !ctx.isError && ctx.sales.length <= 0);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAMEA,yBAAiC;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAEpDA,6BAAoD;IAAAA,mCAAmB;IAAAA,iBAAK;;;;;IAC5EA,6BAAuF;IAAAA,gCAAgB;IAAAA,iBAAK;;;ACC9G,OAAM,MAAOC,iBAAiB;EAO5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,cAAS,GAAY,IAAI;IAGvB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,WAAW,EAAE;EACpB;EACAC,WAAW;IACT,IAAI,CAACC,YAAY,EAAEC,WAAW,EAAE;EAClC;EAEAH,WAAW;IAET,IAAI,CAACE,YAAY,GAAG,IAAI,CAACL,WAAW,CAACG,WAAW,EAAE,CAACI,SAAS,CAAC;MAC3DC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,QAAQ,CAAC;QAC/B,IAAI,CAACR,KAAK,GAAGQ,QAAQ;QACrB,IAAI,CAACG,SAAS,GAAG,KAAK;MACxB,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACX,OAAO,GAAG,IAAI;QACnB,IAAI,CAACU,SAAS,GAAG,KAAK;QAEtBF,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;KACD,CAAC;EAGJ;;AAjCWf,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV9BrB,8BAAuB;MACJA,0BAAU;MAAAA,iBAAK;MAKhCA,8DAAwD;MAExDA,gEAA4E;MAC5EA,gEAA4G;MA6B9GA,iBAAM;;;MAhCAA,eAA2B;MAA3BA,oDAA2B;MAE1BA,eAAa;MAAbA,kCAAa;MACbA,eAAgD;MAAhDA,8EAAgD","names":["i0","SaleListComponent","constructor","saleSerivce","sales","isError","getAllSales","ngOnDestroy","subscription","unsubscribe","subscribe","next","response","console","log","isLoading","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\csharp projects\\InventoryManagement\\InventoryManagementUI\\ClientApp\\src\\app\\sale-list\\sale-list.component.html","E:\\csharp projects\\InventoryManagement\\InventoryManagementUI\\ClientApp\\src\\app\\sale-list\\sale-list.component.ts"],"sourcesContent":["<div class=\"container\">\n  <h1 class=\"mt-3\">Sales List</h1>\n  <!--<div class=\"d-flex justify-content-end mt-3\">\n    <a [routerLink]=\"['/add-product']\" class=\"btn btn-primary\"> Add Product</a>\n  </div>-->\n\n  <p *ngIf=\"isLoading && !isError\"><em>Loading...</em></p>\n\n  <h3 *ngIf=\"isError\" class=\"text-center text-danger\">Error to fetch Data</h3>\n  <h3 *ngIf=\"!isLoading && !isError  && sales.length<=0\" class=\"text-center text-danger\">No Records found</h3>\n\n\n\n  <!--<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"sales.length && !isError\">\n    <thead>\n      <tr>\n        <th>Product Name</th>\n        <th>Purchase Date</th>\n        <th>Quantity Purchased</th>\n        <th>Total Amount</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let p of purchases\">\n        <td>{{ p.product?.name }}</td>\n        <td>{{ p.purchaseDate }}</td>\n        <td>{{ p.quantity }}</td>\n        <td>{{ p.totalAmount }}</td>-->\n        <!--<td>\n\n          <button class=\"btn btn-primary\" (click)=\"editProduct(p)\">Edit</button>\n          <button class=\"btn btn-danger mx-3\" (click)=\"deleteProduct(p.productId.toString())\">Delete</button>\n\n        </td>-->\n      <!--</tr>\n    </tbody>\n  </table>-->\n\n</div>\n","import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\r\nimport { Sale } from '../../models/Sale';\r\nimport { SaleService } from '../../services/sale/sale.service';\r\n\n@Component({\n  selector: 'app-sale-list',\n  templateUrl: './sale-list.component.html',\n  styleUrls: ['./sale-list.component.css']\n})\nexport class SaleListComponent implements OnDestroy {\n\n  sales: Sale[];\n  subscription?: Subscription;\n  isError: boolean;\n  isLoading: boolean = true;\n\n  constructor(private saleSerivce: SaleService) {\n    this.sales = []\n    this.isError = false;\n    this.getAllSales();\n  }\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  getAllSales() {\n\n    this.subscription = this.saleSerivce.getAllSales().subscribe({\n      next: (response) => {\n        console.log('sales:', response);\n        this.sales = response\n        this.isLoading = false;\n      },\n      error: (error) => {\n        this.isError = true;\n        this.isLoading = false;\n\n        console.error('error when getting products:', error)\n      }\n    })\n\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}