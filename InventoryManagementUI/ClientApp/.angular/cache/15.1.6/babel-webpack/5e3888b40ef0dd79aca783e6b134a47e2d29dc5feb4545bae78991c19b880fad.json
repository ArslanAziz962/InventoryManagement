{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as constants from '../../common/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SaleService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllPurchases() {\n    const url = constants.BASE_URL + constants.Sale_ENDPOINT + constants.GET_ALL_ACTION;\n    return this.http.get(url);\n  }\n  saleProduct(pId, qty) {\n    const url = constants.BASE_URL + constants.Sale_ENDPOINT + constants.Sale_PRODUCT_ACTION;\n    let params = new HttpParams();\n    params = params.append('productId', pId);\n    params = params.append('quantity', qty.toString());\n    alert(pId);\n    return this.http.post(url, null, {\n      params: params\n    });\n  }\n}\nSaleService.ɵfac = function SaleService_Factory(t) {\n  return new (t || SaleService)(i0.ɵɵinject(i1.HttpClient));\n};\nSaleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SaleService,\n  factory: SaleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAI7D,OAAO,KAAKC,SAAS,MAAM,wBAAwB;;;AAKnD,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAGxCC,eAAe;IACb,MAAMC,GAAG,GAAGL,SAAS,CAACM,QAAQ,GAAGN,SAAS,CAACO,aAAa,GAAGP,SAAS,CAACQ,cAAc;IAEnF,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAASJ,GAAG,CAAC;EACnC;EAEAK,WAAW,CAACC,GAAW,EAAEC,GAAW;IAClC,MAAMP,GAAG,GAAGL,SAAS,CAACM,QAAQ,GAAGN,SAAS,CAACO,aAAa,GAAGP,SAAS,CAACa,mBAAmB;IAExF,IAAIC,MAAM,GAAG,IAAIf,UAAU,EAAE;IAC7Be,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,WAAW,EAAEJ,GAAG,CAAC;IACxCG,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEH,GAAG,CAACI,QAAQ,EAAE,CAAC;IAClDC,KAAK,CAACN,GAAG,CAAC;IAEV,OAAO,IAAI,CAACR,IAAI,CAACe,IAAI,CAASb,GAAG,EAAE,IAAI,EAAE;MAAES,MAAM,EAAEA;IAAM,CAAE,CAAC;EAC9D;;AAnBWb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["HttpParams","constants","SaleService","constructor","http","getAllPurchases","url","BASE_URL","Sale_ENDPOINT","GET_ALL_ACTION","get","saleProduct","pId","qty","Sale_PRODUCT_ACTION","params","append","toString","alert","post","factory","providedIn"],"sourceRoot":"","sources":["E:\\csharp projects\\InventoryManagement\\InventoryManagementUI\\ClientApp\\src\\services\\sale\\sale.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\r\nimport { Sale } from '../../models/Sale';\r\nimport * as constants from '../../common/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaleService {\n  constructor(private http: HttpClient) { }\n\n\n  getAllPurchases(): Observable<Sale[]> {\n    const url = constants.BASE_URL + constants.Sale_ENDPOINT + constants.GET_ALL_ACTION;\n\n    return this.http.get<Sale[]>(url);\n  }\n\n  saleProduct(pId: string, qty: number): Observable<string> {\n    const url = constants.BASE_URL + constants.Sale_ENDPOINT + constants.Sale_PRODUCT_ACTION;\n\n    let params = new HttpParams();\n    params = params.append('productId', pId);\n    params = params.append('quantity', qty.toString());\n    alert(pId);\n\n    return this.http.post<string>(url, null, { params: params });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}