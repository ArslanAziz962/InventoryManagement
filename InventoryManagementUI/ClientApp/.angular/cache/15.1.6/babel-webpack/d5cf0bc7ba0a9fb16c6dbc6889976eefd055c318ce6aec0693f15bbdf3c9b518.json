{"ast":null,"code":"import * as constants from '../../common/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  addProduct(model) {\n    const url = constants.BASE_URL + constants.PRODUCT_ENDPOINT + constants.CREAET_ACTION;\n    return this.http.post(url, model);\n  }\n  getAllProducts() {\n    const url = constants.BASE_URL + constants.PRODUCT_ENDPOINT + constants.GET_ALL_ACTION;\n    return this.http.get(url);\n  }\n  deleteProduct(id) {\n    const url = constants.BASE_URL + constants.PRODUCT_ENDPOINT + constants.DELETE_ACTION + '/' + id;\n    return this.http.delete(url);\n  }\n  updateProduct(id, model) {\n    const url = constants.BASE_URL + constants.PRODUCT_ENDPOINT + constants.UPDATE_ACTION + '/' + id;\n    return this.http.put(url, model);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,OAAO,KAAKA,SAAS,MAAM,wBAAwB;;;AAMnD,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EACxCC,UAAU,CAACC,KAAc;IACvB,MAAMC,GAAG,GAAGN,SAAS,CAACO,QAAQ,GAAGP,SAAS,CAACQ,gBAAgB,GAAGR,SAAS,CAACS,aAAa;IAErF,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAOJ,GAAG,EAAED,KAAK,CAAC;EACzC;EACAM,cAAc;IACZ,MAAML,GAAG,GAAGN,SAAS,CAACO,QAAQ,GAAGP,SAAS,CAACQ,gBAAgB,GAAGR,SAAS,CAACY,cAAc;IAEtF,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAYP,GAAG,CAAC;EACtC;EACAQ,aAAa,CAACC,EAAU;IACtB,MAAMT,GAAG,GAAGN,SAAS,CAACO,QAAQ,GAAGP,SAAS,CAACQ,gBAAgB,GAAGR,SAAS,CAACgB,aAAa,GAAC,GAAG,GAACD,EAAE;IAE5F,OAAO,IAAI,CAACZ,IAAI,CAACc,MAAM,CAAUX,GAAG,CAAC;EACvC;EAEAY,aAAa,CAACH,EAAU,EAAEV,KAAc;IACtC,MAAMC,GAAG,GAAGN,SAAS,CAACO,QAAQ,GAAGP,SAAS,CAACQ,gBAAgB,GAAGR,SAAS,CAACmB,aAAa,GAAG,GAAG,GAAGJ,EAAE;IAEhG,OAAO,IAAI,CAACZ,IAAI,CAACiB,GAAG,CAAUd,GAAG,EAACD,KAAK,CAAC;EAC1C;;AAvBWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAoB,SAAdpB,cAAc;EAAAqB,YAFb;AAAM","names":["constants","ProductService","constructor","http","addProduct","model","url","BASE_URL","PRODUCT_ENDPOINT","CREAET_ACTION","post","getAllProducts","GET_ALL_ACTION","get","deleteProduct","id","DELETE_ACTION","delete","updateProduct","UPDATE_ACTION","put","factory","providedIn"],"sourceRoot":"","sources":["E:\\csharp projects\\InventoryManagement\\InventoryManagementUI\\ClientApp\\src\\services\\product\\product.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\r\nimport * as constants from '../../common/constants';\nimport { Product } from '../../models/Product';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n  addProduct(model: Product): Observable<void> {\n    const url = constants.BASE_URL + constants.PRODUCT_ENDPOINT + constants.CREAET_ACTION;\n\n    return this.http.post<void>(url, model);\r\n  }\n  getAllProducts(): Observable<Product[]> {\n    const url = constants.BASE_URL + constants.PRODUCT_ENDPOINT + constants.GET_ALL_ACTION;\n\n    return this.http.get<Product[]>(url);\r\n  }\n  deleteProduct(id: string): Observable<boolean> {\n    const url = constants.BASE_URL + constants.PRODUCT_ENDPOINT + constants.DELETE_ACTION+'/'+id;\n\n    return this.http.delete<boolean>(url);\r\n  }\n\n  updateProduct(id: string, model: Product): Observable<boolean> {\n    const url = constants.BASE_URL + constants.PRODUCT_ENDPOINT + constants.UPDATE_ACTION + '/' + id;\n\n    return this.http.put<boolean>(url,model);\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}